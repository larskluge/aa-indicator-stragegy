// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© daywalker7754

//@version=4
strategy(title="AA - Indicator Strategy", shorttitle="Indicator Strategy", overlay=false, default_qty_type=strategy.percent_of_equity, default_qty_value=100, initial_capital=100000)

// Variables
low_border_30 = 30
low_border_20 = 20
high_border_70 = 70
high_border_80 = 80
default_line_width = 2


pjm = input(title="Use PJM Original", type=input.bool, defval=true)

use_fast = input(title="Use Fast Stochastic", type=input.bool, defval=true)
use_slow = input(title="Use Slow Stochastic", type=input.bool, defval=true)
use_rsi = input(title="Use RSI", type=input.bool, defval=true)
use_mf = input(title="Use Money Flow", type=input.bool, defval=true)
use_macd = input(title="Use MACD (signal count only, no graph)", type=input.bool, defval=true)
use_williams = input(title="Use % Williams", type=input.bool, defval=true)

historical_bars_to_consider_for_fast_stoch = input(title="Historical bars for signal [Fast Stoch]", type=input.integer, defval=5, minval=0)
historical_bars_to_consider_for_slow_stoch = input(title="Historical bars for signal [Slow Stoch]", type=input.integer, defval=3, minval=0)
historical_bars_to_consider_for_rsi = input(title="Historical bars for signal [RSI]", type=input.integer, defval=5, minval=0)
historical_bars_to_consider_for_mf = input(title="Historical bars for signal [Money Flow]", type=input.integer, defval=2, minval=0)
historical_bars_to_consider_for_macd = input(title="Historical bars for signal [MACD]", type=input.integer, defval=1, minval=0)
historical_bars_to_consider_for_williams = input(title="Historical bars for %Williams", type=input.integer, defval=3, minval=0)

long = input(title="Test of Long Strategy?", type=input.bool, defval=true)
short = input(title="Test of Short Strategy?", type=input.bool, defval=false)

signals = input(title="How many signals have to be right?", type=input.integer, defval=3)


//************************* Money Flow *************************
mf_length = input(title="Length for MoneyFlow", type=input.integer, defval=15, minval=1, maxval=2000)

if (pjm)
    mf_length := 20

src = hlc3
upper = sum(volume * (change(src) <= 0 ? 0 : src), mf_length)
lower = sum(volume * (change(src) >= 0 ? 0 : src), mf_length)
mf = rsi(upper, lower)

// ************************* RSI *************************
rsiLength = input(title="Length for RSI", type=input.integer, defval=5, minval=1, maxval=100)

if (pjm)
    rsiLength := 14

vrsi = rsi(close, rsiLength)


// ************************* Fast Stochastic *************************
stoch_length = input(5, minval=1, title = "Fast Stochastic Interval")
fastD = input(3, minval=1, title = "Fast Stochastic Smoothening")

if (pjm)
    stoch_length := 14
    fastD := 3

vFast = ema(stoch(close, high, low, stoch_length),fastD)

// ************************* Slow Stochastic *************************
s_stoch_length = input(10, minval=1, title = "Slow Stochastic Interval")
slowD = input(10, minval=1, title = "Slow Stochastic Smoothening")

if (pjm)
    s_stoch_length := 35
    slowD := 10

vSlow = ema(stoch(close, high, low, s_stoch_length),slowD)

// ************************* MACD *************************
fast_length = input(title="MACD fast length", type=input.integer, defval=10)
slow_length = input(title="MACD slow length", type=input.integer, defval=35)
signal_length = input(title="MACD Signal Smoothing", type=input.integer, minval = 1, maxval = 50, defval = 5)

if (pjm)
    fast_length := 10
    slow_length := 35
    signal_length := 5

[_macd, _signal, macd_hist] = macd(close, 10, 35, 5)

macd_growing = macd_hist[1] < macd_hist


// ************************* EMA *************************
ema10_len = input(10, minval=1, title="EMA Length Fast")
ema10 = ema(close, ema10_len)
ema20_len = input(20, minval=1, title="EMA Length Slow")
ema20 = ema(close, ema20_len)

// ************************* % Williams *************************

williams_len = input(defval=14, title="Williams Length", minval=1)

wil_up  = highest(williams_len)
wil_lo  = lowest(williams_len)
wil     = 100 - (100 * (close - wil_up) / (wil_up - wil_lo) * -1)

// ************************* Plot the charts *************************

plot(use_rsi ? vrsi : na, color=color.purple, title="RSI", linewidth=default_line_width, transp=0)
plot(use_mf ? mf : na, color=color.orange, title="MFI", linewidth=default_line_width, transp=0)
plot(use_fast ? vFast : na, color=color.red, title="Fast Stochastic", linewidth=default_line_width, transp=0)
plot(use_slow ? vSlow : na, color=color.green, title="Slow Stochastic", linewidth=default_line_width, transp=0)
plot(use_williams ? wil : na, title="Williams %R", color=color.white, linewidth=1)

// col_grow_above = #26A69A
// col_grow_below = #FFCDD2
// col_fall_above = #B2DFDB
// col_fall_below = #EF5350
// macd_color = macd_hist >= 0 ? (macd_growing ? col_grow_above : col_fall_above) : (macd_growing ? col_grow_below : col_fall_below)
// plot(use_macd ? macd_hist : na, title="MACD", style=plot.style_columns, color=macd_color, transp=0)

h20 = hline(20)
h30 = hline(30)
h70 = hline(70)
h80 = hline(80)
fill(h30, h70, color=color.red, transp=90)
fill(h20, h30, color=color.orange, transp=90)
fill(h70, h80, color=color.orange, transp=90)


// ************************* Own indicators and alarm for buy and sell signals *************************

var buy_signal_fast_stoch = false
var buy_signal_slow_stoch = false
var buy_signal_rsi = false
var buy_signal_mf = false
var buy_signal_macd = false
var buy_signal_williams = false

var sell_signal_fast_stoch = false
var sell_signal_slow_stoch = false
var sell_signal_rsi = false
var sell_signal_mf = false
var sell_signal_macd = false
var sell_signal_williams = false


buy_signal_fast_stoch := crossover(vFast, low_border_20)
sell_signal_fast_stoch := crossunder(vFast, high_border_80)

buy_signal_slow_stoch := crossover(vSlow, low_border_20)
sell_signal_slow_stoch := crossunder(vSlow, high_border_80)

buy_signal_rsi := crossover(vrsi, low_border_30)
sell_signal_rsi := crossunder(vrsi, high_border_70)

buy_signal_mf := crossover(mf, low_border_20)
sell_signal_mf := crossunder(mf, high_border_80)

buy_signal_macd := macd_hist <= 0 and macd_growing
sell_signal_macd := macd_hist >= 0 and not macd_growing

buy_signal_williams := crossover(wil, low_border_20)
sell_signal_williams := crossunder(wil, high_border_80)


// ************************* Should it be taken into account? *************************

if not use_fast
    historical_bars_to_consider_for_fast_stoch := 0

if not use_slow
    historical_bars_to_consider_for_slow_stoch := 0

if not use_rsi
    historical_bars_to_consider_for_rsi := 0

if not use_mf
    historical_bars_to_consider_for_mf := 0

if not use_macd
    historical_bars_to_consider_for_macd := 0

if not use_williams
    historical_bars_to_consider_for_williams := 0

signal(series, historical_bars) =>
    if historical_bars > 0
        use = false
        for i = 0 to historical_bars - 1
            use := use or series[i]
        use ? 1 : 0
    else
        0


count_buy_signals = signal(buy_signal_fast_stoch, historical_bars_to_consider_for_fast_stoch)
                  + signal(buy_signal_slow_stoch, historical_bars_to_consider_for_slow_stoch)
                  + signal(buy_signal_rsi, historical_bars_to_consider_for_rsi)
                  + signal(buy_signal_mf, historical_bars_to_consider_for_mf)
                  + signal(buy_signal_macd, historical_bars_to_consider_for_macd)
                  + signal(buy_signal_williams, historical_bars_to_consider_for_williams)

count_sell_signals = signal(sell_signal_fast_stoch, historical_bars_to_consider_for_fast_stoch)
                   + signal(sell_signal_slow_stoch, historical_bars_to_consider_for_slow_stoch)
                   + signal(sell_signal_rsi, historical_bars_to_consider_for_rsi)
                   + signal(sell_signal_mf, historical_bars_to_consider_for_mf)
                   + signal(sell_signal_macd, historical_bars_to_consider_for_macd)
                   + signal(sell_signal_williams, historical_bars_to_consider_for_williams)



buy_signal = count_buy_signals >= signals
sell_signal = count_sell_signals >= signals

plot(buy_signal ? 100 : 0, linewidth=default_line_width, color=color.green, transp=40, title="Buy Signal")
plot(sell_signal ? 0 : 100, linewidth=default_line_width, color=color.maroon, transp=40, title="Sell Signal")

alertcondition(buy_signal, title='Buy Signal', message="Buy signal - {{exchange}}:{{ticker}}, Price = {{close}}")
alertcondition(sell_signal, title='Sell Signal', message="Sell signal - {{exchange}}:{{ticker}}, Price = {{close}}")

// Strategy & Backtest in a specific date range

// Set the date for the backtest
startDate = input(title="Start Date", type=input.integer, defval=1, minval=1, maxval=31)
startMonth = input(title="Start Month", type=input.integer, defval=1, minval=1, maxval=12)
startYear = input(title="Start Year", type=input.integer, defval=2010, minval=1800, maxval=2100)

endDate = input(title="End Date", type=input.integer, defval=31, minval=1, maxval=31)
endMonth = input(title="End Month", type=input.integer, defval=01, minval=1, maxval=12)
endYear = input(title="End Year", type=input.integer, defval=2020, minval=1800, maxval=2100)

inDateRange = (time >= timestamp(syminfo.timezone, startYear, startMonth, startDate, 0, 0)) and (time < timestamp(syminfo.timezone, endYear, endMonth, endDate, 0, 0))

// Parameters for the strategy
//longProfitPerc = input(title="Long Take Profit (%)", minval=0.0, step=0.5, defval=60) / 100
//longExitPrice  = strategy.position_avg_price * (1 + longProfitPerc)
longStoppLoss = input(title="Long Stop Loss (%)", minval=0.0, step=0.5, defval=20)/100
stopExitPrice = strategy.position_avg_price * (1 - longStoppLoss)

if long
    if (inDateRange and buy_signal)
        strategy.entry("Long", strategy.long)

    if (strategy.position_size > 0 and sell_signal)
        // strategy.exit(id="Long", stop=stopExitPrice, limit=longExitPrice)
        strategy.close(id="Long")

    if (strategy.position_size > 0 and not sell_signal)
        strategy.exit(id="Long", stop=stopExitPrice)

if short
    if (inDateRange and sell_signal)
        strategy.entry("Short", strategy.short)

    if (strategy.position_size < 0 and buy_signal)
        strategy.close(id="Short")

    if (strategy.position_size < 0 and not buy_signal)
        strategy.exit(id="Short", stop=stopExitPrice)
